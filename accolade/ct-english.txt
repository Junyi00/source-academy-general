More than cosmetics

Nothing in IT is as constant as change. In some domains, however, hypes do not play a major role. This includes the fundamentals of good programming and solid software design. A standard work on this is now available in an easily accessible edition for JavaScript.

Since 1996, the second edition of “Structure and Interpretation of Computer Programs” (SICP) by Abelson and the Sussmans has been explaining what maintainable and extensible code should look like. The only shortcoming of the classic: the authors used the less common LISP dialect MIT Scheme for their program examples. This presented a hurdle for many potential readers. Martin Henz and Tobias Wrigstad have now ported the text and all examples to JavaScript. This is familiar to many and makes reading more accessible. But you can definitely see an irony of history in this, because JavaScript is basically very similar to Scheme.

The two made the changes very carefully, so that there are no differences in content to the original. Furthermore, the original authors introduce functional programming in an almost playful way. The first snippets of code solve minor problems in number theory and numerics, but the complexity quickly increases.

Besides a package for the symbolic derivation of functions, the authors implement a system for processing symbolic algebra with polynomials and a simulator for electronic circuits. They are also developing a JavaScript interpreter that can process the code examples from the book. Numerous – sometimes challenging – exercises help to deepen the material.

The syntactic minimalism is consistently impressive. All code uses constants, functions, and the ternary operator almost exclusively. You rarely find an if statement and the first assignment to a variable comes after almost 200 pages. The text is thus a plea for the merits of functional programming over the imperative alternative.

Henz and Wrigstad have created a small masterpiece: the book reads as if it had always been written for JavaScript. For many young developers, reading SICP should now be much more interesting than before. The easy-to-understand English also invites easy reading.
